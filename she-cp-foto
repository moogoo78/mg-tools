#!/usr/bin/env python
# -.- coding: utf-8 -.-

import argparse
import configparser
import os
import sys
from datetime import datetime
import time
import shutil


def main(conf_path, args):
    source_path = ''
    target_path = ''
    date_start = ''

    config = configparser.ConfigParser()
    with open(conf_path, 'r') as configfile:
        config.read_file(configfile)
        source_path =config.get('Path', 'source_dir')
        target_path = config.get('Path', 'target_dir')
        date_start = config.get('Changes', 'last_date')

    files = os.listdir(source_path)

    for i in files:
        path = os.path.join(source_path, i)
        mtime = os.path.getmtime(path)
        dirname = datetime.fromtimestamp(mtime).strftime('%y%m%d')
        target_dir = os.path.join(target_path, dirname)
        date_start_epoch = time.mktime(datetime.strptime(date_start, "%y%m%d").timetuple())
        date_newdir_epoch = time.mktime(datetime.strptime(dirname, '%y%m%d').timetuple())
        if date_newdir_epoch > date_start_epoch:
            if not args.dry_run:
                if not os.path.exists(target_dir):
                    print('making dir: {}'.format(target_dir))
                    with open(conf_path, 'w') as configfile:
                        config.set('Changes', 'last_date', dirname)
                        config.write(configfile)
                    os.mkdir(target_dir)

                print('copying file: {} to {}'.format(i, target_dir))
                shutil.copy2(path, target_dir)
            else:
                print('will copying file: {} to {}'.format(i, target_dir))

parser = argparse.ArgumentParser(description='Copy foto from camera to disk')
#parser.add_argument('integers', metavar='N', type=int, nargs='+',
#                    help='an integer for the accumulator')
parser.add_argument('-c', '--config', dest='conf', default='.she-cp-foto.conf', help='config path')
parser.add_argument('-d', '--dry-run', action='store_true', help='dry run')

args = parser.parse_args()
conf_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), args.conf)
main(conf_path, args)



